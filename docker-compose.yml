version: '3.8'

services:
  # 백엔드 서비스
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vpp-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    volumes:
      - vpp_data:/app/data
    restart: unless-stopped
    networks:
      - vpp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/statistics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 프론트엔드 서비스
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vpp-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - vpp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 개발용 서비스 (선택사항)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: vpp-backend-dev
    ports:
      - "5001:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - vpp_data:/app/data
    restart: unless-stopped
    networks:
      - vpp-network
    profiles:
      - dev

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: vpp-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    restart: unless-stopped
    networks:
      - vpp-network
    profiles:
      - dev

volumes:
  vpp_data:
    driver: local

networks:
  vpp-network:
    driver: bridge 